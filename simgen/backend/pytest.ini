[pytest]
# Pytest configuration file

# Test discovery patterns
python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*

# Test directories
testpaths = tests

# Minimum Python version
minversion = 7.0

# Command line options
addopts =
    # Verbose output
    -v
    # Show extra test summary info
    -ra
    # Coverage options
    --cov=simgen
    --cov-report=html:htmlcov
    --cov-report=term-missing
    --cov-report=xml
    --cov-report=json
    # Strict markers
    --strict-markers
    # Show local variables in tracebacks
    --showlocals
    # Capture output
    --capture=no
    # Run async tests
    --asyncio-mode=auto
    # Maximum test duration
    --timeout=60
    # Parallel execution (adjust workers as needed)
    -n auto

# Markers for organizing tests
markers =
    unit: Unit tests that test individual components
    integration: Integration tests that test component interactions
    slow: Tests that take more than 5 seconds
    api: API endpoint tests
    service: Service layer tests
    db: Database-related tests
    llm: Tests requiring LLM API calls
    vision: Computer vision tests
    physics: Physics simulation tests
    smoke: Quick smoke tests for CI
    critical: Critical path tests that must pass

# Coverage settings
[coverage:run]
source = simgen
omit =
    */tests/*
    */test_*.py
    */__init__.py
    */migrations/*
    */config/*
    */docs/*

[coverage:report]
# Minimum coverage percentage
fail_under = 70
precision = 2
show_missing = True
skip_covered = False

exclude_lines =
    # Standard pragmas
    pragma: no cover

    # Don't complain about missing debug code
    def __repr__
    def __str__

    # Don't complain if tests don't hit defensive assertion code
    raise AssertionError
    raise NotImplementedError

    # Don't complain if non-runnable code isn't run
    if __name__ == .__main__.:
    if TYPE_CHECKING:
    @abstract
    @abstractmethod

    # Don't complain about deprecations
    warnings.warn

    # Logging
    logger.debug
    logger.info
    logging.debug
    logging.info

[coverage:html]
directory = htmlcov
title = SimGen Backend Coverage Report

[coverage:json]
output = coverage.json
pretty_print = True

[coverage:xml]
output = coverage.xml