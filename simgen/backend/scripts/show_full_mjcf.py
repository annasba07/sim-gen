#!/usr/bin/env python3
"""
Show the complete MJCF file generated by AI.
"""

import asyncio
import sys
import os

# Add the backend directory to Python path
sys.path.append(os.path.dirname(__file__))

from app.services.prompt_parser import PromptParser
from app.services.simulation_generator import SimulationGenerator
from app.services.llm_client import LLMClient


async def show_full_mjcf():
    """Generate and display the complete MJCF file."""
    
    print("AI-Generated MJCF Simulation File")
    print("=" * 60)
    
    # Test prompt
    test_prompt = "Create a simple pendulum swinging from a fixed point"
    print(f"From prompt: '{test_prompt}'")
    print("=" * 60)
    
    try:
        # Create services
        llm_client = LLMClient()
        prompt_parser = PromptParser(llm_client)
        sim_generator = SimulationGenerator(llm_client)
        
        # Generate simulation
        entities = await prompt_parser.parse_prompt(test_prompt)
        result = await sim_generator.generate_simulation(entities)
        
        if result.success:
            print(result.mjcf_content)
            print("=" * 60)
            print(f"Success! Generated {len(result.mjcf_content)} characters of valid MJCF")
            print(f"Method: {result.method}")
        else:
            print(f"Generation failed: {result.error_message}")
        
    except Exception as e:
        print(f"Error: {e}")


if __name__ == "__main__":
    asyncio.run(show_full_mjcf())