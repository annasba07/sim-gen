┌─────────────────────────────────────────────────────────────────────────────┐
│                           SimGen AI Clean Architecture                       │
└─────────────────────────────────────────────────────────────────────────────┘

┌─────────────────────────────────────────────────────────────────────────────┐
│                              PRESENTATION LAYER                              │
│                                                                               │
│  ┌─────────────┐  ┌─────────────┐  ┌─────────────┐  ┌─────────────┐       │
│  │   Frontend  │  │   API       │  │  WebSocket  │  │   Health    │       │
│  │  (Next.js)  │  │  Endpoints  │  │  Endpoints  │  │  Endpoints  │       │
│  └──────┬──────┘  └──────┬──────┘  └──────┬──────┘  └──────┬──────┘       │
│         │                 │                 │                 │              │
│         └─────────────────┼─────────────────┼─────────────────┘              │
│                           │                 │                                │
│                           ▼                 ▼                                │
│                    ┌──────────────────────────────┐                         │
│                    │    Request Validation        │                         │
│                    │    & Rate Limiting           │                         │
│                    └──────────┬───────────────────┘                         │
└───────────────────────────────┼─────────────────────────────────────────────┘
                                │
                                ▼
┌─────────────────────────────────────────────────────────────────────────────┐
│                              APPLICATION LAYER                               │
│                                                                               │
│  ┌────────────────────────────────────────────────────────────────────┐     │
│  │                    Dependency Injection Container                   │     │
│  └────────────┬──────────────┬──────────────┬─────────────┬──────────┘     │
│               │              │              │             │                 │
│       ┌───────▼──────┐ ┌────▼─────┐ ┌─────▼────┐ ┌──────▼──────┐         │
│       │   Physics    │ │  Vision  │ │    AI    │ │Infrastructure│         │
│       │   Service    │ │  Service │ │  Service │ │   Services   │         │
│       ├──────────────┤ ├──────────┤ ├──────────┤ ├──────────────┤         │
│       │ • Compiler   │ │ • CV     │ │ • LLM    │ │ • Cache      │         │
│       │ • Runtime    │ │   Pipeline│ │   Client │ │ • WebSocket  │         │
│       │ • Streaming  │ │ • Analyzer│ │ • Enhancer│ │ • Monitoring │         │
│       └──────┬───────┘ └────┬─────┘ └─────┬────┘ └──────┬──────┘         │
│              │              │              │             │                  │
│              └──────────────┼──────────────┼─────────────┘                  │
│                             │              │                                │
│                             ▼              ▼                                │
│                    ┌──────────────────────────────┐                         │
│                    │    Service Orchestration     │                         │
│                    │    & Business Logic          │                         │
│                    └──────────┬───────────────────┘                         │
└───────────────────────────────┼─────────────────────────────────────────────┘
                                │
                                ▼
┌─────────────────────────────────────────────────────────────────────────────┐
│                               DOMAIN LAYER                                   │
│                                                                               │
│  ┌──────────────┐  ┌──────────────┐  ┌──────────────┐  ┌──────────────┐   │
│  │   Physics    │  │    Sketch    │  │  Simulation  │  │   Business   │   │
│  │   Entities   │  │   Entities   │  │   Entities   │  │    Rules     │   │
│  └──────┬───────┘  └──────┬───────┘  └──────┬───────┘  └──────┬───────┘   │
│         │                  │                  │                  │           │
│         └──────────────────┼──────────────────┼──────────────────┘           │
│                            │                  │                              │
│                            ▼                  ▼                              │
│                    ┌──────────────────────────────┐                         │
│                    │    Domain Validation         │                         │
│                    │    & Business Rules          │                         │
│                    └──────────┬───────────────────┘                         │
└───────────────────────────────┼─────────────────────────────────────────────┘
                                │
                                ▼
┌─────────────────────────────────────────────────────────────────────────────┐
│                            INFRASTRUCTURE LAYER                              │
│                                                                               │
│  ┌──────────────┐  ┌──────────────┐  ┌──────────────┐  ┌──────────────┐   │
│  │  Repository  │  │    Cache     │  │   Database   │  │   External   │   │
│  │   Pattern    │  │  Repository  │  │  Repository  │  │     APIs     │   │
│  └──────┬───────┘  └──────┬───────┘  └──────┬───────┘  └──────┬───────┘   │
│         │                  │                  │                  │           │
│         ▼                  ▼                  ▼                  ▼           │
│  ┌──────────────────────────────────────────────────────────────────────┐   │
│  │                         Data Access Layer                             │   │
│  ├────────────┬────────────┬────────────┬────────────┬─────────────────┤   │
│  │ PostgreSQL │   Redis    │   MuJoCo   │ Anthropic  │    OpenAI       │   │
│  └────────────┴────────────┴────────────┴────────────┴─────────────────┘   │
└─────────────────────────────────────────────────────────────────────────────┘

═══════════════════════════════════════════════════════════════════════════════
                              CORE (Cross-Cutting)
═══════════════════════════════════════════════════════════════════════════════

┌─────────────┐  ┌─────────────┐  ┌─────────────┐  ┌─────────────┐
│ Interfaces  │  │Configuration│  │ Exceptions  │  │  Validation │
└─────────────┘  └─────────────┘  └─────────────┘  └─────────────┘

┌─────────────┐  ┌─────────────┐  ┌─────────────┐  ┌─────────────┐
│  Circuit    │  │  Resource   │  │   Logging   │  │  Monitoring │
│  Breakers   │  │  Manager    │  │             │  │   Metrics   │
└─────────────┘  └─────────────┘  └─────────────┘  └─────────────┘

═══════════════════════════════════════════════════════════════════════════════
                               DATA FLOW
═══════════════════════════════════════════════════════════════════════════════

Request Flow:
┌────────┐      ┌────────┐      ┌────────┐      ┌────────┐      ┌────────┐
│ Client │ ───▶ │  API   │ ───▶ │Service │ ───▶ │ Domain │ ───▶ │  Data  │
└────────┘      └────────┘      └────────┘      └────────┘      └────────┘
                     │               │               │               │
                Validation      Orchestration   Business Rules    Storage
                     │               │               │               │
┌────────┐      ┌────────┐      ┌────────┐      ┌────────┐      ┌────────┐
│Response│ ◀─── │  API   │ ◀─── │Service │ ◀─── │ Domain │ ◀─── │  Data  │
└────────┘      └────────┘      └────────┘      └────────┘      └────────┘

═══════════════════════════════════════════════════════════════════════════════
                          DEPENDENCY DIRECTION
═══════════════════════════════════════════════════════════════════════════════

    ┌─────────────────────────────────────────────────────┐
    │  Dependency Direction: Inward (Stable Dependencies)  │
    └─────────────────────────────────────────────────────┘

    Presentation ───▶ Application ───▶ Domain ◀─── Infrastructure
         ▲                ▲              ▲              ▲
         │                │              │              │
         └────────────────┴──────────────┴──────────────┘
                          CORE (Interfaces)

═══════════════════════════════════════════════════════════════════════════════
                            KEY PRINCIPLES
═══════════════════════════════════════════════════════════════════════════════

1. SEPARATION OF CONCERNS
   - Each layer has a specific responsibility
   - No business logic in controllers
   - No infrastructure in domain

2. DEPENDENCY INVERSION
   - Depend on abstractions (interfaces)
   - Not on concrete implementations
   - High-level modules don't depend on low-level

3. SINGLE RESPONSIBILITY
   - Each class/module has one reason to change
   - Clear, focused responsibilities

4. OPEN/CLOSED PRINCIPLE
   - Open for extension
   - Closed for modification
   - New features don't break existing code

5. INTERFACE SEGREGATION
   - Many specific interfaces
   - Better than one general interface
   - Clients only depend on what they use